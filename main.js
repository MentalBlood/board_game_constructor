"use strict";function getAllElementsWithDepth_(e,t,s,o){for(const r of Object.keys(e)){const l=e[r],i=o.concat([r]);0==t?s.push({keys:i,element:l}):getAllElementsWithDepth_(l,t-1,s,i)}}function getAllElementsWithDepth(e,t){const s=[];return getAllElementsWithDepth_(e,t,s,[]),s}function dictFromTwoLists(e,t){const s={};for(let o=0;o<e.length;o++)s[e[o]]=t[o];return s}class Root extends React.Component{constructor(e){super(e),this.state={board:void 0,selected_cell:void 0,config_text:void 0,config:{players:["white","black"],board:[],cell:["x","y"],figures:{intellector:{movement:[{x:1,also_reversed:!0},{y:1,also_reversed:!0},{x:1,y:-1,also_reversed:!0}]},defensor:{movement:[{x:1,also_reversed:!0},{y:1,also_reversed:!0},{x:1,y:-1,also_reversed:!0}]},dominator:{movement:[{x:1,repeat:!0,also_reversed:!0},{y:1,repeat:!0,also_reversed:!0},{x:1,y:-1,repeat:!0,also_reversed:!0}]},aggressor:{movement:[{x:1,y:1,repeat:!0,also_reversed:!0},{x:1,y:-1,repeat:!0,also_reversed:!0},{x:-1,y:1,repeat:!0,also_reversed:!0}]},liberator:{movement:[{x:2,also_reversed:!0,jump:!0},{y:2,also_reversed:!0,jump:!0},{x:2,y:-2,also_reversed:!0,jump:!0}]},progressor:{movement:{white:[{x:1},{y:1},{x:-1,y:1}],black:[{x:-1},{y:-1},{x:1,y:-1}]}}},initial_position:{white:{intellector:[{x:4,y:-2}],dominator:[{x:0,y:0},{x:8,y:-4}],agressor:[{x:2,y:-1},{x:6,y:-3}],defensor:[{x:3,y:-1},{x:5,y:-2}],liberator:[{x:1,y:0},{x:7,y:-3}],progressor:[{x:0,y:1},{x:2,y:0},{x:4,y:-1},{x:6,y:-2},{x:8,y:-3}]},black:{intellector:[{x:4,y:4}],dominator:[{x:0,y:6},{x:8,y:2}],agressor:[{x:2,y:5},{x:6,y:3}],defensor:[{x:3,y:4},{x:5,y:3}],liberator:[{x:1,y:5},{x:7,y:2}],progressor:[{x:0,y:5},{x:2,y:4},{x:4,y:3},{x:6,y:2},{x:8,y:1}]}}}};for(let e=0;e<9;e++)for(let t=0-Math.floor(e/2);t<7-e%2-Math.floor(e/2);t++)this.state.config.board.push({x:e,y:t});this.state.config_text=JSON.stringify(this.state.config),this.state=Object.assign(this.state,this.compile_())}onConfigTextChange(e){const t=e.target.value;this.setState({config_text:t})}insertByCoordinates(e,t,s,o,r=!0){const l=e.map((e=>t[e]));let i=s;for(let e=0;e<l.length-1;e++){const t=l[e];if(!i[t]){if(!r)return;i[t]={}}i=i[t]}const n=l[l.length-1];(i[n]||r)&&(i[n]=o)}placeFiguresOnBoard(e,t,s){const o={};for(const t of s)this.insertByCoordinates(e,t,o,{});for(const s in t)for(const r in t[s])for(const l of t[s][r])this.insertByCoordinates(e,l,o,{player:s,figure:r},!1);return o}unpackBoard(e,t){return getAllElementsWithDepth(this.state.board,e.length-1).map((t=>Object.assign({},t.element,dictFromTwoLists(e,t.keys))))}compile_(){const e=JSON.parse(this.state.config_text);return{config:e,position:e.initial_position,board:this.placeFiguresOnBoard(e.cell,e.initial_position,e.board)}}compile(){JSON.parse(this.state.config_text);this.setState(this.compile_(),(()=>this.forceUpdate()))}canMove(e,t){return!0}move(e,t){}selectCell(e){console.log("selectCell",e),this.state.selected_cell&&this.canMove(this.state.selected_cell,e)&&(this.move(this.state.selected_cell,e),this.setState({selected_cell:void 0})),this.setState({selected_cell:e})}render(){const e=this.unpackBoard(this.state.config.cell,this.state.board);return React.createElement("div",{className:"app"},React.createElement(Board,{board:e,selectCell:this.selectCell.bind(this),selected_cell:this.state.selected_cell}),React.createElement("div",{className:"config"},React.createElement("textarea",{className:"configText",value:JSON.stringify(this.state.config,null,"\t"),onChange:this.onConfigTextChange.bind(this)}),React.createElement("button",{className:"compileButton",onClick:this.compile.bind(this)},"compile")))}}const rootElement=document.getElementById("root");ReactDOM.render(React.createElement(Root),rootElement);