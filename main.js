"use strict";function getAllElementsWithDepth_(t,e,o,s){for(const i of Object.keys(t)){const n=Number.parseInt(i,10),a=t[n],c=s.concat([n]);0===e?o.push({keys:c,element:a}):getAllElementsWithDepth_(a,e-1,o,c)}}function getAllElementsWithDepth(t,e){const o=[];return getAllElementsWithDepth_(t,e,o,[]),o}function dictFromTwoLists(t,e){const o={};for(let s=0;s<t.length;s++)o[t[s]]=e[s];return o}function matchDict(t,e){for(const o in e)if("object"==typeof t[o]){if(!matchDict(t[o],e[o]))return!1}else if(t[o]!=e[o])return!1;return!0}function joinDicts(t,e){const o=Object.assign({},t);for(const t in e){if(o[t]){if(Array.isArray(o[t])&&Array.isArray(e[t])){o[t].push.apply(o[t],e[t]);continue}if(isDict(o[t])&&isDict(e[t])){o[t]=joinDicts(o[t],e[t]);continue}}o[t]=e[t]}return o}const games_available=["chess","checkers","intellector"];class Root extends React.Component{constructor(t){super(t),this.state={game_name:"chess",board:void 0,game_state:void 0,selected_cell:void 0,config_text:void 0,config:void 0},this.actions={swap:({from_cell:t,to_cell:e,board:o})=>{this.setCellByCoordinates(t.coordinates,Object.assign({},e),o),this.setCellByCoordinates(e.coordinates,Object.assign({},t),o)},move:({from_cell:t,to_cell:e,board:o})=>{const s=t.coordinates;this.setCellByCoordinates(e.coordinates,t,o),this.setCellEmpty(s,o)},take:({from_cell:t,to_cell:e,board:o})=>{this.setCellEmpty(e.coordinates,o)},replace:({from_cell:t,board:e,parameters:o})=>{this.setCellByCoordinates(t.coordinates,Object.assign(t,{figure:o.new_figure}),e)}},this.values_computers={is_cell:(t,e)=>Boolean(t),is_enemy:(t,e)=>void 0!==(null==t?void 0:t.player)&&(null==t?void 0:t.player)!=(null==e?void 0:e.player),is_figure:(t,e)=>void 0!==(null==t?void 0:t.player)},this.entities_getters={cell:t=>this.composeUnpackedBoard(this.state.config.cell.coordinates_names,t)},this.conditions_types={exists:t=>Boolean(t.length)},this.state_data_getters={check_win:t=>{const e=this.getCurrentPlayer(),o=this.state.config.win_conditions[e];for(const e of o){const o=this.entities_getters[e.entity](t).filter((t=>matchDict(t,e.filter)));return this.conditions_types[e.type](o)===e.result}}},this.game_state_passiveness_by_type={move:"active",check_win:"passive",end:"active"},this._ref=React.createRef()}fetchSetConfigForGame(t,e){fetch(`config/${t}/main.json`).then((t=>t.text())).then((o=>this.setState(Object.assign(this.compile_(o.replaceAll("\t","   ")),{game_name:t}),e)))}componentDidMount(){window.addEventListener("resize",this.handleResize.bind(this)),this.fetchSetConfigForGame(this.state.game_name,(()=>this.startGame()))}handleResize(){this.forceUpdate()}startGame(){this.setGameState(this.state.config.initial_game_state)}setGameState(t){this.state.config.game_states[t]&&this.setState((e=>({game_state:t})))}composeCellWithoutData(t){const e=this.state.config.cell.coordinates_names,o={};for(const s of e)o[s]=t[s];return o}getCurrentPlayer(){var t;const e=this.getCurrentGameStateInfo();if(e)return null==e||null===(t=e.parameters)||void 0===t?void 0:t.player}withoutCoordinates(t){const e=Object.assign({},t);return delete e.coordinates,e}hangleConfigTextChange(t){const e=t.target.value;this.setState({config_text:e})}setCellByCoordinates(t,e,o,s){var i;const n=(s=s||this.state.config.cell.coordinates_names).map((e=>t[e]));let a=o;for(let t=0;t<n.length-1;t++){const e=n[t];a[e]||(a[e]={}),a=a[e]}const c=n[n.length-1];"function"==typeof e&&(e=e(a[c])),null!==(i=a[c])&&void 0!==i&&i.coordinates?a[c]=Object.assign({},e,{coordinates:a[c].coordinates}):a[c]=Object.assign({},e)}setCellEmpty(t,e,o){o=o||this.state.config.cell.coordinates_names,this.setCellByCoordinates(t,{coordinates:t},e,o)}getCellByCoordinates_(t,e,o){const s=t.map((t=>e[t]));let i=o;for(let t=0;t<s.length-1;t++){const e=s[t];if(!i[e])return;i=i[e]}const n=s[s.length-1];return void 0!==i[n]?[i,n]:void 0}getCellByCoordinates(t,e,o){const s=this.getCellByCoordinates_(t,e,o);return s?s[0][s[1]]:void 0}composeBoardWithFigures(t,e,o){const s={};for(const e of o)this.setCellEmpty(e,s,t);for(const o in e)for(const i in e[o])for(const n of e[o][i])this.setCellByCoordinates(n,{coordinates:n,moves_made:0,player:o,figure:i},s,t);return s}composeUnpackedBoard(t,e){return getAllElementsWithDepth(this.state.board,t.length-1).map((t=>t.element))}compile_(t){const e=JSON.parse(t);return{config:e,config_text:t,game_state:e.initial_game_state,position:e.initial_position,board:this.composeBoardWithFigures(e.cell.coordinates_names,e.initial_position,e.board.cells)}}compile(){this.setState(this.compile_(this.state.config_text))}isVectorDividedByAnother(t,e,o){let s;for(const i of t){if(!e[i]){if(o[i])return!1;continue}const t=e[i]/o[i];if(t!=Math.floor(t))return!1;if(s){if(t!=s)return!1}else{if(s=t,!o.also_reversed&&s<0)return!1;if(!o.repeat&&Math.abs(s)>1)return!1}}return{coefficient:s}}composeComputedValues(t,e,o){const s={};for(const i of t)this.values_computers[i]&&(s[i]=this.values_computers[i](e,o));return s}composeActionsForCell(t,e,o){if(!t)return[];const s=[];for(const i of t){if(i.if){let t=!1;for(const s of i.if)if((!s.self||matchDict(o,s.self))&&(!s.target||matchDict(e,s.target))){if(s.computed){if(!matchDict(this.composeComputedValues(Object.keys(s.computed),e,o),s.computed))continue}t=!0;break}if(!t)continue}s.push({target_cell:e,from_cell:o,actions:i.actions})}return console.log("matched_actions",s,"from",t,e,o),s}composeCellAfterSteps(t,e,o,s){const i={};for(const n of t){const t=o[n]||0;i[n]=e[n]+t*s}return i}composeCoordinatesDelta(t,e,o){const s={};for(const i of t)s[i]=(o[i]||0)-(e[i]||0);return s}composeActionsForAvailableMove(t,e,o,s,i){const n=o.figure,a=this.state.config.cell.coordinates_names,c=(this.state.config.figures[n],[]),r=this.composeActionsForCell(e.destination||[],s,o);if(r.filter((t=>t.actions.includes("cancel"))).length)return[];c.push.apply(c,r);const l=[],f=Math.sign(i);for(let s=f;s!=i;s+=f){const i=this.composeCellAfterSteps(a,o.coordinates,t,s),n=this.getCellByCoordinates(a,i,this.state.board),c=this.composeActionsForCell(e.transition||[],n,o);l.push(...c)}return l.filter((t=>t.actions.includes("cancel"))).length?[]:c.concat(l)}composeActionsForSimpleMove(t,e){const o=t.figure,s=this.state.config.cell.coordinates_names,i=this.state.config.figures[o],n=this.composeCoordinatesDelta(s,t.coordinates,e.coordinates),a=i.movement,c=isDict(a)?a[t.player]:a;for(const o of c){var r;const a=null===(r=this.isVectorDividedByAnother(s,n,o))||void 0===r?void 0:r.coefficient;if(!a)continue;const c=joinDicts(o.cell_actions,i.cell_actions);return this.composeActionsForAvailableMove(o,c,t,e,a)}return[]}composeActionsForComplexMove(t,e){const o=t.figure,s=this.state.config.cell.coordinates_names,i=this.composeCoordinatesDelta(s,t.coordinates,e.coordinates),n=this.state.config.complex_movement.filter((t=>t.figures.filter((t=>t.figure===o)).length)),a=t.coordinates;for(const t of n){let e=!0;const n=[];for(const f of t.figures.filter((t=>t.figure===o))){console.log("initial_figure_info",f);const o=f.relative_position||{};console.log("figure_position_relative",o);const h=this.composeCoordinatesDelta(s,a,o);console.log("shift",h);Object.keys(t).filter((t=>this.state.config.figures[t]));for(const o of t.figures){var c,r;const a=o.figure,m=o.coordinates_delta||{};let d;var l;if(o!==f)d=1;else if(d=null===(l=this.isVectorDividedByAnother(s,i,m))||void 0===l?void 0:l.coefficient,!d){e=!1;break}const g=o.relative_position||{},u=this.composeCoordinatesDelta(s,h,g),p=this.getCellByCoordinates(s,u,this.state.board);if((null==p?void 0:p.figure)!==a){e=!1;break}const _=this.composeCellAfterSteps(s,p.coordinates,m,1),v=this.getCellByCoordinates(s,_,this.state.board),C=o.cell_actions||t.cell_actions||{},y=this.composeActionsForAvailableMove(m,C,p,v,d),b=(null===(c=C.destination)||void 0===c?void 0:c.filter((t=>!t.actions.includes("cancel"))).length)||0,S=(null===(r=C.transition)||void 0===r?void 0:r.filter((t=>!t.actions.includes("cancel"))).length)||0;if(!y||y.length<b+S){console.log("!new_actions",y.length,b,S),e=!1;break}if(y.filter((t=>t.actions.includes("cancel"))).length){e=!1;break}n.push.apply(n,y)}if(e)return n}}return[]}composeActionsForMove(t,e){if(!t.figure)return[];if(isObjectsEqual(t,e))return[];const o=this.composeActionsForSimpleMove(t,e);if(o.length)return o;if(!this.state.config.complex_movement)return[];const s=this.composeActionsForComplexMove(t,e);return console.log("complex_actions",s),s}composeStateAfterActions(t,e,o){this.setCellByCoordinates(e.coordinates,(t=>Object.assign(t,{moves_made:t.moves_made+1})),t.board);for(const e of o)for(const o of e.actions){let s,i;isDict(o)?(s=o.action,i=o.parameters):s=o,this.actions[s]&&this.actions[s]({from_cell:e.from_cell,to_cell:e.target_cell,parameters:i,board:t.board})}return t}getCurrentGameStateInfo(){return this.state.config.game_states[this.state.game_state]}getGameStateInfo(t){return this.state.config.game_states[t]}composeNextGameState(t){const e=this.getGameStateInfo(t);if("string"==typeof e.next)return e.next;const o=this.state_data_getters[e.type](this.state.board);for(const t of e.next)for(const e of t.if)if(matchDict({result:o},e))return t.state}setNextGameState(){const t=this.state.game_state;let e=this.composeNextGameState(t);for(;;){const t=this.getGameStateInfo(e).type;if("passive"!=this.game_state_passiveness_by_type[t])break;e=this.composeNextGameState(e)}this.setGameState(e)}handleSelectCell(t){const e=this.state.selected_cell;if(e){const o=this.composeActionsForMove(e,t);if(o.length>0){const t=this.composeStateAfterActions(this.state,e,o);this.setState(t,(()=>this.setNextGameState()))}this.setState({selected_cell:void 0})}else{var o;const e=t.player;if(!e)return;e&&e===(null===(o=this.getCurrentGameStateInfo().parameters)||void 0===o?void 0:o.player)&&this.setState({selected_cell:t})}}handleGameNameSelectChange(t){const e=t.target.value;this.fetchSetConfigForGame(e,(()=>this.startGame()))}render(){var t;const e=this.state.config?this.composeUnpackedBoard(this.state.config.cell.coordinates_names,this.state.board):void 0,o=null===(t=this.state.config)||void 0===t?void 0:t.board.rotation_angle[this.getCurrentPlayer()];return React.createElement("div",{className:"app",ref:this._ref},this.state.config?React.createElement("div",{className:"gameUI"},React.createElement(Board,{resources:{path:`config/${this.state.game_name}`},board:e,rotation_angle:o,cell_config:this.state.config.cell,handleSelectCell:this.handleSelectCell.bind(this),selected_cell:this.state.selected_cell,cell_coords_names:this.state.config.cell.coordinates_names}),React.createElement("div",{className:"gameState unselectable"},this.state.game_state.replaceAll("_"," "))):null,React.createElement("div",{className:"config"},React.createElement("textarea",{className:"configText",value:this.state.config_text,onChange:this.hangleConfigTextChange.bind(this)}),React.createElement("select",{value:this.state.game_name,onChange:this.handleGameNameSelectChange.bind(this)},games_available.map((t=>React.createElement("option",{key:t,value:t},t)))),React.createElement("button",{className:"compileButton unselectable",onClick:this.compile.bind(this)},"compile")))}}const rootElement=document.getElementById("root");ReactDOM.render(React.createElement(Root),rootElement);