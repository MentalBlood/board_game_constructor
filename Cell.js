"use strict";function composeExpressionWithParameters(e,t){return`${Object.keys(t).map((e=>`const ${e} = ${t[e]};`)).join("\n")};\n${e}`}function evaluate(expression){return eval(expression)}function computeGeometry(e,t){return e.geometry.map((e=>e.map((e=>{if("number"==typeof e)return e;if("string"!=typeof e)return;return evaluate(composeExpressionWithParameters(e,t))}))))}function composeSizedPoints(e,t){return e.map((e=>[t*e[0],t*e[1]]))}function computeCoordinate(e,t){Object.values(t);return evaluate(composeExpressionWithParameters(e,Object.assign({},t)))}function computeCellScreenSize(e){return{width:Math.max(...e.map((e=>e[0]))),height:Math.max(...e.map((e=>e[1])))}}function Cell(e){const{cell_config:t,coordinates:n,size:o,figure:r,figure_image:i,player:s,selected:c,handleSelectThisCell:a}=e;console.log(i);const l=composeSizedPoints(computeGeometry(t,n),o),{width:m,height:p}=computeCellScreenSize(l),u=computeCoordinate(t.position.x,n)*o,h=computeCoordinate(t.position.y,n)*o;return React.createElement("div",{className:"cell"+(c?" selected":""),style:{width:`${m}px`,height:`${p}px`,transform:`translate(${u}px, ${h}px)`}},React.createElement("svg",{style:{width:"100%",height:"100%"},xmlns:"http://www.w3.org/2000/svg",version:"1.1",onClick:a},React.createElement("polygon",{fill:t.colors[s].cell,points:l.join(" ")}),React.createElement("text",{style:{fontSize:p/5+"px"},className:"unselectable",y:p/5*2,fill:t.colors[s].text},React.createElement("tspan",{x:m/3},Object.values(n).join(", ")),React.createElement("tspan",{x:m/8,dy:p/5*2},r))))}