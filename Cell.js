"use strict";function composeExpressionWithParameters(e,t){return`${Object.keys(t).map((e=>`const ${e} = ${t[e]};`)).join("\n")};\n${e}`}function evaluate(expression){return eval(expression)}function evaluateExpressionWithParameters(expression,parameters){return eval(composeExpressionWithParameters(expression,parameters))}function computeGeometry(e,t){return e.geometry.map((e=>e.map((e=>{if("number"==typeof e)return e;if("string"!=typeof e)return;return evaluate(composeExpressionWithParameters(e,t))}))))}function composeSizedPoints(e,t){return e.map((e=>[t*e[0],t*e[1]]))}function computeCoordinate(e,t){Object.values(t);return evaluate(composeExpressionWithParameters(e,Object.assign({},t)))}function computeCellScreenSize(e){return{width:Math.max(...e.map((e=>e[0]))),height:Math.max(...e.map((e=>e[1])))}}const default_cell_colors={fill:'"darkgrey"',selector:'"skyblue"'};function composeZoomedGeometry(e,t){const o=e.reduce(((e,t)=>[e[0]+t[0],e[1]+t[1]])).map((t=>t/e.length));return e.map((e=>[o[0]+t*(e[0]-o[0]),o[1]+t*(e[1]-o[1])]))}function Cell(e){const{cell_config:t,coordinates:o,size:r,figure:n,player:s,selected:a,handleSelectThisCell:i}=e,l=composeSizedPoints(computeGeometry(t,o),r),c=a?composeZoomedGeometry(l,.85):l,{width:m,height:p}=computeCellScreenSize(l),u=computeCoordinate(t.position.x,o)*r,g=computeCoordinate(t.position.y,o)*r,f=Object.assign({},default_cell_colors,t.colors||{});return Object.keys(f).map((e=>f[e]=evaluateExpressionWithParameters(f[e],o))),React.createElement("div",{className:"cellWithFigure",style:{width:`${m}px`,height:`${p}px`,transform:`translate(${u}px, ${g}px)`}},React.createElement("svg",{className:"cell",style:{width:"100%",height:"100%"},xmlns:"http://www.w3.org/2000/svg",version:"1.1",onClick:i},a?React.createElement("polygon",{fill:f.selector,points:l.join(" ")}):null,React.createElement("polygon",{fill:f.fill,points:c.join(" ")})),n?React.createElement("img",{className:"figure",src:`config/${game_name}/img/figures/${s}/${n}.svg`,alt:n,draggable:!1,onClick:i}):null)}