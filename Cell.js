"use strict";function composeCellPolygon(e,t,o){const n=[];for(const o of e.geometry)n.push(`${t*o[0]}, ${t*o[1]}`);const s=n.join(" ");return React.createElement("polygon",{fill:e.colors[o].cell,points:s})}function computeCoordinate(expression,coordinates,size){const values=Object.values(coordinates),variables_defining=Object.keys(coordinates).map((e=>`const ${e} = coordinates.${e};`)).join("\n"),result=eval(`${variables_defining};\n${expression}`);return result}function Cell(e){const{cell_config:t,coordinates:o,size:n,figure:s,player:l,selected:c,handleSelectThisCell:a}=e,i=Math.max(...t.geometry.map((e=>e[0])))*n,r=Math.max(...t.geometry.map((e=>e[1])))*n,p=computeCoordinate(t.position.x,o,n),m=computeCoordinate(t.position.y,o,n);return React.createElement("svg",{className:"cell"+(c?" selected":""),style:{width:i+"px",height:r+"px",transform:`translate(${p+"px"}, ${m+"px"})`},xmlns:"http://www.w3.org/2000/svg",version:"1.1",onClick:a},composeCellPolygon(t,n,l),React.createElement("text",{style:{fontSize:r/5+"px"},className:"unselectable",y:r/5*2,fill:t.colors[l].text},React.createElement("tspan",{x:i/3},Object.values(o).join(", ")),React.createElement("tspan",{x:i/8,dy:r/5*2},s)))}