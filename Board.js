"use strict";function _extends(){return(_extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var i=arguments[t];for(var n in i)Object.prototype.hasOwnProperty.call(i,n)&&(e[n]=i[n])}return e}).apply(this,arguments)}function isDict(e){return void 0!==e&&e.constructor==Object}function isObjectsEqual(e,t){if(!isDict(e)||!isDict(t))return!1;for(const i in e)if(e[i]!==t[i])return!1;return!0}function computeBoardSize(e,t){const i=t.map((t=>{const i={x:computeCoordinate(e.position.x,t.coordinates),y:computeCoordinate(e.position.y,t.coordinates)},n=computeGeometry(e,t.coordinates);return Object.assign(i,computeCellScreenSize(n)),i}));return{width:Math.max(...i.map((e=>e.x+e.width))),height:Math.max(...i.map((e=>e.y+e.height)))}}function Board(e){const{cell_config:t,resources:i,board:n,handleSelectCell:o,selected_cell:c,figure_image:r}=e,a=.5*window.innerWidth,s=.9*window.innerHeight,l=computeBoardSize(t,n),u=Math.min(a/l.width,s/l.height),d=u*l.width,h=u*l.height;return React.createElement("div",{className:"board",style:{width:`${d}px`,height:`${h}px`}},n.map((e=>React.createElement(Cell,_extends({key:Object.values(e.coordinates).concat([e.figure,i.path]).join("_")},e,{resources:i,cell_config:t,size:u,handleSelectThisCell:()=>o(e),selected:isObjectsEqual(c,e)})))))}